[core]
    autocrlf = false
    editor = vim
    pager = delta
    whitespace = space-before-tab,trailing-space
    trustctime = false
    ignorecase = false
    preloadIndex = true
    eol = lf
    excludesfile = ~/.config/git/ignore

[init]
    defaultBranch = main

[pull]
    rebase = false

[push]
    # Avoids pushing other branches by accident when using a plain “git push”.
    # Git will only push the branch you are on by default.
    # Note this will prevent the “Multiple working copies workflow” steps (shown below) from working.
    default = current
    followTags = true
    autoSetupRemote = true

[branch]
    # Checking remote branches are setup with tracking by default
    autoSetupMerge = always
    sort = -committerdate

[color]
    ui = auto

[help]
    # Automatically correct and execute mistyped commands
    autocorrect = 20

[column]
    ui = auto

[merge]
    # Include summaries of merged commits in newly created merge commit messages
    log = true
    conflictStyle = diff3

[mergetool]
    # Do not prompt before every single merge and do not keep *.orig files
    # around after the merge
    prompt = false
    keepBackup = false

[diff]
    # Detect copies as well as renames
    renames = copies
    colorMoved = plain
    mnemonicprefix = true
    algorithm = histogram
    # Use blank lines as diff boundary to improve diffs
    compactionHeuristic = true

[fetch]
    # Always prune remote-tracking branches
    # See http://albertogrespan.com/blog/always-prune-remote-tracking-branches/
    prune = false
    pruneTags = false
    all = true

[advice]
    commitBeforeMerge = true
    detachedHead = true
    implicitIdentity = true
    pushNonFastForward = false
    resolveConflict = true
    statusHints = false

[alias]
    br = branch
    ch = checkout
    ch- = checkout -
    co = commit
    fe = fetch
    pu = push
    st = status
    gl = log --oneline --decorate --stat --graph
    # print a pretty list of remote branches with last commit date and author name
    branches = !git for-each-ref --sort=-committerdate --format='%(committerdate:relative):%(authorname):%(refname:short)' refs/remotes | column -t -s:
    commits = !git log --pretty=format:"%ad:%an:%d:%B" --branches --date=short --all --since=1.week.ago

[status]
    # Short git status output, but include branch info
    short = true
    branch = true

[credential]
    helper = osxkeychain

[tag]
    verbose = true
    sort = version:refname

[commit]
    verbose = true

[gpg]
    program = gpg

[submodule]
    # Fetch submodules in parallel, with a reasonable number of jobs
    fetchJobs = 0
    # Disabled due to issues in git pull
    recurse = true

[remote]
    pushDefault = origin

[rerere]
    # Track and remember conflict resolutions for replaying them, see
    # https://git-scm.com/blog/2010/03/08/rerere.html
    enabled = true
    autoupdate = true

[log]
    # Use mailmap files to map author information
    mailmap = true
    # Abbreviate hashes in git log
    abbrevCommit = true

[transfer]
    # Check transferred objects
    fsckObjects = false

[user]
    useConfigOnly = true

[interactive]
    diffFilter = delta --color-only

[delta]
    features = line-numbers decorations
    whitespace-error-style = 22 reverse
    plus-style = bold green "#002800"
    syntax-theme = Nord

[delta "decorations"]
    commit-decoration-style = bold yellow box ul
    file-style = bold yellow ul
    file-decoration-style = none

[includeIf "gitdir:~/code/forter/"]
    path = ".gitconfig-forter"

[includeIf "gitdir:~/code/personal/"]
    path = ".gitconfig-personal"

[includeIf "gitdir:~/.dotfiles/"]
    path = ".gitconfig-personal"

[feature]
	manyFiles = true

[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
